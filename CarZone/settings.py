"""
Django settings for CarZone project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# Security key for cryptographic signing (keep this secret in production)
SECRET_KEY = 'django-insecure-r89w7juzsfsosuaz$zz*(uxd&$(_6d22^$0%^w7jhi79qft^1d'

# Debug mode (turn off in production for security reasons)
DEBUG = True

# Hosts/domain names that this Django site can serve (empty allows all)
ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    'contacts.apps.ContactsConfig',  # Contacts app configuration
    'account.apps.AccountConfig',  # Account app configuration
    'cars.apps.CarsConfig',  # Cars app configuration
    'pages.apps.PagesConfig',  # Pages app configuration
    'django.contrib.admin',  # Django admin interface
    'django.contrib.auth',  # Django authentication system
    'django.contrib.contenttypes',  # Django content types framework
    'django.contrib.sessions',  # Django session framework
    'django.contrib.messages',  # Django messaging framework
    'django.contrib.staticfiles',  # Django static files handling
    'ckeditor',  # CKEditor for rich text editing
    'multiselectfield',  # Multi-select field support
    'django.contrib.humanize',  # Humanize utilities for templates
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Security middleware
    'django.contrib.sessions.middleware.SessionMiddleware',  # Session middleware
    'django.middleware.common.CommonMiddleware',  # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF protection middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication middleware
    'django.contrib.messages.middleware.MessageMiddleware',  # Messaging middleware
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection middleware
]

# URL configuration module for the project
ROOT_URLCONF = 'CarZone.urls'

# Template settings
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template engine
        'DIRS': [BASE_DIR, 'templates'],  # Directories to search for templates
        'APP_DIRS': True,  # Enable template loading from installed apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # Debug context processor
                'django.template.context_processors.request',  # Request context processor
                'django.contrib.auth.context_processors.auth',  # Auth context processor
                'django.contrib.messages.context_processors.messages',  # Messages context processor
            ],
        },
    },
]

# WSGI application entry point
WSGI_APPLICATION = 'CarZone.wsgi.application'


# Database configuration
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # Database engine
        'NAME': 'carzone_db',  # Database name
        'USER': 'postgres',  # Database user
        "PASSWORD": '',  # Database password
        "HOST": 'localhost'  # Database host
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  # Prevents passwords similar to user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  # Enforces minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  # Prevents common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  # Prevents numeric passwords
    },
]


# Internationalization settings
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'  # Language code

TIME_ZONE = 'UTC'  # Time zone

USE_I18N = True  # Enable internationalization

USE_TZ = True  # Enable timezone support


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'  # URL to access static files
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # Directory for static files collection
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'CarZone/static')  # Additional directories for static files
]

# Media files (user-uploaded content)
MEDIA_URL = '/media/'  # URL to access media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory for media files

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Default primary key type

# Message framework configuration
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: "danger",  # CSS class for error messages
    messages.INFO: 'info',  # CSS class for info messages
    messages.SUCCESS: 'success',  # CSS class for success messages
    messages.WARNING: 'warning',  # CSS class for warning messages
    messages.DEBUG: 'debug',  # CSS class for debug messages
}

# Email sending configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Email backend
EMAIL_HOST = 'smtp.gmail.com'  # Email host
EMAIL_PORT = 587  # Email port
EMAIL_HOST_USER = 'your superadmin email'  # Email host user
EMAIL_HOST_PASSWORD = "password"  # Email host password
EMAIL_USE_TLS = True  # Use TLS for email
